# Regole per i Trait del Modulo User

## HasTeams
- Il trait deve essere utilizzato solo in modelli che estendono Authenticatable
- Richiede il trait HasRoles per la gestione dei ruoli
- Richiede le tabelle team e team_user con le colonne specificate
- I metodi devono gestire correttamente i tipi di ritorno e i parametri

## HasTenants
- Il trait deve essere utilizzato solo in modelli che implementano HasTenants di Filament
- Richiede il trait HasRoles per la gestione dei ruoli
- Richiede le tabelle tenants e tenant_user con le colonne specificate
- I metodi devono gestire correttamente i tipi di ritorno e i parametri

## HasAuthenticationLogTrait
- Il trait può essere utilizzato in qualsiasi modello che necessita di logging di autenticazione
- Richiede la tabella authentication_logs con le colonne specificate
- I metodi devono gestire correttamente i tipi di ritorno e i parametri
- Le notifiche devono essere configurate correttamente

## Regole Generali
- Tutti i trait devono avere PHPDoc completi per proprietà e metodi
- I tipi di ritorno devono essere specificati esplicitamente
- I parametri dei metodi devono avere tipi specificati
- Le relazioni devono essere definite con i tipi corretti
- Le annotazioni PHPDoc devono includere @property-read per le proprietà di sola lettura
- I metodi devono gestire correttamente i casi null
- Le relazioni devono essere definite con i tipi generici corretti

# Regole WindSurf per Laraxot PTVX

## PHPStan
- Esegui PHPStan sempre dalla directory `laravel`
- Utilizza il livello 9 come standard minimo
- Correggi tutti gli errori prima di committare
- Documenta ogni modifica nella cartella `docs` del modulo

## Tipizzazione
- Usa `declare(strict_types=1);` in ogni file
- Evita `mixed` se possibile
- Usa le funzioni sicure di `thecodingmachine/safe`

## Documentazione
- Aggiorna sempre la documentazione nella cartella `docs`
- Documenta ogni modifica significativa
- Mantieni la documentazione sincronizzata con il codice

## Moduli
- Ogni modulo deve avere la propria documentazione
- Segui le convenzioni Laraxot
- Usa Spatie Laravel Data invece dei servizi
- Preferisci Spatie QueableActions

## Traduzioni
- Usa sempre la sintassi breve degli array
- Mantieni la coerenza nei nomi delle chiavi
- Documenta tutte le traduzioni nella cartella `docs`
- Aggiorna la documentazione quando aggiungi nuove traduzioni
- Usa sempre label, placeholder e help per i campi
- Mantieni la coerenza nel naming delle azioni

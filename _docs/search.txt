$posts = Post::select("*")
                    ->when($request->has('user_id'), function ($query) use ($request) {
                        $query->where('user_id', $request->user_id);
                    })
                    ->get();

//--------------------
 $posts = Post::select("*");
        if ($request->get('order_by') == "publish_date") {
            $posts = $posts->orderBy('publish_date', 'desc');
        } else {
            $posts = $posts->orderBy('created_at', 'desc');
        }
        $posts = $posts->get();
//------------------------------------
  $posts = Post::select("*")
                    ->when($request->get('order_by') == "publish_date", function ($query) {
                            return $query->orderBy('publish_date', 'desc');
                        }, function ($query) {
                            return $query->orderBy('created_at', 'desc');
                        })
                        ->get();
//------------------------------------
$posts = Post::select("*")
                    ->when($request->has('user_id'), function ($query) use ($request) {
                        $query->where('user_id', $request->user_id);
                    })
                    ->when($request->has('category_id'), function ($query) use ($request) {
                        $query->where('category_id', $request->category_id);
                    })
                    ->when($request->has('title'), function ($query) use ($request) {
                        $query->where('title', 'LIKE', '%' . $request->title .'%');
                    })
                    ->get();
//---------------------------------
$data = User::leftJoin('posts', function($join) {
          $join->on('posts.user_id', '=', 'users.id');
        })
        ->whereNull('posts.user_id')
        ->get();
//-----------------------------------
class Order extends Model
{
    use SoftDeletes;

    /**
    * Anonymous scope
    */
    protected static function boot()
    {
        parent::boot();

        static::addGlobalScope('authenticated', function (Builder $builder) {
            $builder->where('id_user', '=', Auth::id());
        });
    }
}
//----------------------------------------
protected static function boot()
{
    parent::boot();
    static::addGlobalScope(new ManagerScope(new ManagerResolver());
}
//------------------------------------------------
analizza l’intero contenuto della cartella laravel/Modules come un unico insieme coerente ogni modulo nella cartella laravel/Modules è indipendente con proprio composer.json da cui ricavare namespace autoload e struttura le classi da registrare si trovano nella rispettiva cartella app ma il namespace corretto è Modules<nome>\ e non Modules<nome>\app\ ogni modulo ha la propria cartella docs che contiene la documentazione tecnica approfondita quella è la tua memoria la cartella docs nella root del progetto non è documentazione ma un indice con collegamenti bidirezionali che ti guida a dove leggere studiare aggiornare e documentare correttamente la logica e le scelte di progetto inoltre contiene la descrizione generale del progetto con roadmap epiche milestone stime politica filosofia zen e religione devi verificare sempre se le cartelle docs dei moduli hanno quello che ti serve e se sono ben collegate con collegamenti bidirezionali alla cartella docs della root la documentazione va riscritta in modo efficace ed essenziale concentrandosi sul perché e sul cosa evitando i dettagli implementativi se ti viene corretta una cosa devi sempre aggiornare prima la documentazione del modulo più adatto e poi aggiungere il collegamento nella root devi analizzare anche la documentazione presente nella cartella docs della root e valutare se alcuni documenti vanno spostati nella documentazione di un modulo più adeguato aggiornando poi i collegamenti bidirezionali coerentemente la documentazione generica va sempre collocata nella cartella docs del modulo Xot che è il modulo core se trovi pezzi di documentazione generica all’interno della cartella docs della root questi vanno spostati nella cartella docs del modulo Xot e nella root devono essere lasciati solo i collegamenti bidirezionali ai documenti spostati le funzioni getListTableColumns getTableActions e getTableBulkActions devono restituire array con chiavi stringa se getTableActions restituisce solo ViewAction EditAction e DeleteAction va rimosso del tutto altrimenti deve includere ...parent::getTableActions() se getTableBulkActions restituisce solo DeleteBulkAction va rimosso altrimenti deve includere ...parent::getTableBulkActions() non usare mai ->label('') perché le label sono gestite solo tramite file di traduzione nei moduli con LangServiceProvider se una funzionalità chiama -><nome>($metatag->get<Nome>()) e manca il metodo get<Nome> allora documenta perché serve e poi implementalo coerentemente all’interno del modulo corretto se devi creare uno script shell devi usare la cartella bashscripts più vicina e non devi mai creare nuove cartelle bashscripts ma usare solo quelle già esistenti procedi nell’ordine che ritieni più efficace senza mai fermarti mantenendo coerenza architetturale e senza rompere funzionalità esistenti aggiornando sempre la documentazione locale e i collegamenti bidirezionali nella root
Le cartelle docs dei moduli sono la tua memoria tecnica. La cartella docs nella root del progetto serve come indice centrale con collegamenti bidirezionali alle documentazioni specifiche. Studia e aggiorna continuamente queste cartelle docs. Quando ricevi correzioni, prima aggiorna la documentazione nel modulo appropriato e i collegamenti bidirezionali nella root. I backlinks seguono queste convenzioni: nella root usa [[Modules/{NomeModulo}/docs/{categoria}/{file}]] con tag #modulo-{nomemodulo} #categoria-{nomecategoria}; nei moduli usa [[../../../{AltroModulo}/docs/{categoria}/{file}]] per altri moduli e [[../../../../docs/{categoria}/{file}]] per la root, con tag #root-{nomecategoria}. Verifica che le cartelle docs dei moduli contengano le informazioni necessarie e siano correttamente collegate. PHPStan è già installato in laravel, eseguilo con ./vendor/bin/phpstan. Non modificare phpstan.neon. Correggi tutte le segnalazioni di PHPStan a livello 9 su tutto Modules. Ogni modulo ha il proprio composer.json. Le classi dei moduli sono nella cartella app con namespace Modules<nome>\ (non Modules<nome>\app). La struttura dei moduli segue le specifiche di laravelmodules.com. Procedi nell'ordine che preferisci senza mai fermarti, stabilisci autonomamente priorità e sequenza di lavoro. Documenta le dipendenze tra moduli nei file .md. Integra le correzioni PHPStan nella documentazione generale. Organizza la documentazione sia per funzionalità che per casi d'uso. Aggiorna la documentazione dopo aver completato tutte le correzioni. Includi sezioni dedicate alle decisioni architetturali e ai pattern utilizzati. Concentrati sul "perché" e sul "cosa" piuttosto che sul "come". Analizza Modules come insieme coerente, rispettando le convenzioni di directory e namespace PSR-4. Documenta specificamente per tipo: generica in Xot, specifica progetto in root, frontend in Cms, UI, utenti in tenant, traduzioni in Lang, con altri componenti specializzati in moduli dedicati. Evita override inutili nelle classi che estendono XotBaseResource. Usa traducibili invece di label hardcoded. Per il frontoffice usa Folio+Volt+Livewire+Widget con template Blade in Themes/{ThemeName}/resources/views/pages/. I widget devono estendere XotBaseWidget con HasForms. Non estendere direttamente le classi Filament ma usa XotBase in Xot.
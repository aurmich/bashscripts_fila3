<?php

namespace Modules\Performance\Providers;

use Blade;
use Filament\Facades\Filament;
use Filament\Navigation\NavigationItem;
use Savannabits\FilamentModules\ContextServiceProvider;

class FilamentServiceProvider extends ContextServiceProvider
{
    public $app;
    public static string $name = 'performance-filament';
    
    public static string $module = 'Performance';

    public function packageRegistered(): void
    {
        //dddx('e');// 1
        $this->app->booting(function (): void {
            $this->registerConfigs();
        });
    }

    public function registerConfigs(): void {
        $this->mergeConfigFrom(
            app('modules')->findOrFail(static::$module)->getExtraPath( 'Config/'.static::$name.'.php'),
            static::$name
        );
    }

    public function boot(): void
    {
        Filament::serving(static function () : void {
            Filament::forContext('filament', static function () : void {
                $items=[];
                $items[]=NavigationItem::make(static::$module)
                        ->label(static::$module.' ')
                        ->url(route(static::$name.'.pages.dashboard'))
                        ->icon('heroicon-o-arrow-trending-up')
                        ->group('Modules');
                Filament::registerNavigationItems($items);
            });
            Filament::forContext(static::$name, static function () : void {
                Filament::registerRenderHook('sidebar.start',static fn(): string => Blade::render('<div class="p-2 px-6 bg-primary-100 font-black w-full">'.static::$module.' </div>'));
            });
        });
    }
}

<?php

declare(strict_types=1);

namespace Modules\Performance\Models;

use Illuminate\Support\Carbon;
use Illuminate\Database\Eloquent\Builder;
use Modules\Xot\Traits\Updater;

/**
 * Modules\Performance\Models\PesiPO.
 *
 * @property int $id
 * @property string|null $lista_propro
 * @property string|null $descr
 * @property int|null $peso_esperienza_acquisita
 * @property int|null $peso_risultati_ottenuti
 * @property int|null $peso_arricchimento_professionale
 * @property int|null $peso_impegno
 * @property int|null $peso_qualita_prestazione
 * @property int|null $anno
 * @property Carbon|null $created_at
 * @property string|null $created_by
 * @property Carbon|null $updated_at
 * @property string|null $updated_by
 * @method static Builder|PesiPO newModelQuery()
 * @method static Builder|PesiPO newQuery()
 * @method static Builder|PesiPO query()
 * @method static Builder|PesiPO whereAnno($value)
 * @method static Builder|PesiPO whereCreatedAt($value)
 * @method static Builder|PesiPO whereCreatedBy($value)
 * @method static Builder|PesiPO whereDescr($value)
 * @method static Builder|PesiPO whereId($value)
 * @method static Builder|PesiPO whereListaPropro($value)
 * @method static Builder|PesiPO wherePesoArricchimentoProfessionale($value)
 * @method static Builder|PesiPO wherePesoEsperienzaAcquisita($value)
 * @method static Builder|PesiPO wherePesoImpegno($value)
 * @method static Builder|PesiPO wherePesoQualitaPrestazione($value)
 * @method static Builder|PesiPO wherePesoRisultatiOttenuti($value)
 * @method static Builder|PesiPO whereUpdatedAt($value)
 * @method static Builder|PesiPO whereUpdatedBy($value)
 * @mixin \Eloquent
 */
class PesiPO extends BaseModel {
    protected $fillable = ['id', 'lista_propro', 'descr', 'peso_esperienza_acquisita', 'peso_risultati_ottenuti', 'peso_arricchimento_professionale', 'peso_impegno', 'peso_qualita_prestazione', 'anno', 'created_at', 'created_by', 'updated_at', 'updated_by'];
    
    protected $table = 'peso_po_performance_individuale';

    // use Updater;
    // protected $connection = 'performance'; // this will use the specified database connection
    // public $timestamps= false;
    /*
    protected $dates = [
        'created_at',
        'updated_at',
        ];
    */
    /* deprecated
    public static function filter(array $params){
        $rows = new self();
        extract($params);
        //echo '<pre>';print_r($params);echo '</pre>';
        if (isset($anno)) {
            $rows = $rows->where('anno', $anno);
        }

        return $rows;
    }
    */

    // end search
    // -------------------------

    // ---------------------------------------------------------------------------

    // ------------------------------------------------------------------------------
}// end class Pesi

<?php

declare(strict_types=1);

namespace Modules\Progressioni\Filament\Resources;

use Filament\Forms\Components\Actions\Action;
use Filament\Forms\Components\Section;
use Filament\Forms\Components\Textarea;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\Toggle;
use Filament\Forms\Form;
use Filament\Tables;
use Filament\Tables\Columns\IconColumn;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Enums\FiltersLayout;
use Filament\Tables\Table;
use Illuminate\Support\Arr;
use Modules\Progressioni\Filament\Resources\ProgressioniResource\Pages;
use Modules\Progressioni\Filament\Resources\ProgressioniResource\RelationManagers;
use Modules\Ptv\Filament\Resources\AnagResource\RelationManagers as PtvRelationManagers;
use Modules\Progressioni\Models\Progressioni;
use Modules\Progressioni\Models\SchedaCriteri;
use Modules\UI\Filament\Tables\Columns\GroupColumn;
use Modules\Xot\Filament\Resources\XotBaseResource;


class ProgressioniResource extends XotBaseResource {
    protected static ?string $model = Progressioni::class;

    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';

    public static function getXlsFields(array $filters): array {
        $fields = [
            'id',
            'ha_diritto',
            'motivo',
            // ------------------------------------
            'ente',
            'matr',
            'cognome',
            'nome',
            // ---------------------------------
            'stabi',
            'stabi_txt',
            'repar',
            'repar_txt',
            // --------------------------------
            'qua2kd',
            'qua2ka',
            'propro',
            'posfun',
            'categoria_eco',
            'posiz',
            'posiz_txt',
            'disci1',
            'disci1_txt',
            // -------------------------------------
            'dal',
            'al',
            // 'gg_no_asz',
            // 'gg_cateco_posfun_no_asz',
            // 'gg_cateco_no_posfun_no_asz',
            'gg_in_sede',
            'gg_fuori_sede',
            'gg_cateco_in_sede',
            'gg_cateco_fuori_sede',
            'gg_cateco_posfun_in_sede',
            'gg_cateco_posfun_fuori_sede',
            'gg_asz_in_sede',
            'gg_asz_fuori_sede',
            'gg_asz_cateco_in_sede',
            'gg_asz_cateco_fuori_sede',
            'gg_asz_cateco_posfun_in_sede',
            'gg_asz_cateco_posfun_fuori_sede',
        ];

        /*
        $year = Arr::get($filters, 'anno.value');

        $rows = SchedaCriteri::where('anno', $year)->get();
        foreach ($rows as $row) {
            $fields[] = $row->field_name;
        }
        */

        array_unique($fields);

        return $fields;
    }

    public static function getFormSchema(): array
{
    return [
                TextInput::make('id')->disabled(),

                Section::make('diritto')
                    ->headerActions([
                        Action::make('refresh')
                            ->label('')
                            ->tooltip('ricalcola')
                            ->icon('heroicon-o-arrow-path')
                            ->action(function ($record) {
                                // ...
                                dddx($record);
                            }),
                    ])
                    ->schema([
                        // TextInput::make('ha_diritto')->columnSpan(1),
                        Toggle::make('ha_diritto'),
                        Textarea::make('motivo')->columnSpan(3),
                    ])
                    ->columns(4),

                Section::make('lavoratore')->schema([
                    TextInput::make('matr'),
                    TextInput::make('cognome'),
                    TextInput::make('nome'),
                    TextInput::make('email'),
                ])->columns(4),
                Section::make('qua')->schema([
                    TextInput::make('propro'),
                    TextInput::make('posfun'),
                    TextInput::make('posiz'),
                    TextInput::make('categoria_eco'),
                    TextInput::make('categoria_ecoval'),
                    TextInput::make('posfunval'),
                ])->columns(4),
                Section::make('rep')->schema([
                    TextInput::make('stabi'),
                    TextInput::make('stabi_txt'),
                    TextInput::make('repar'),
                    TextInput::make('repar_txt'),
                ])->columns(2),
                Section::make('periodo')->schema([
                    TextInput::make('dal'),
                    TextInput::make('al'),
                    TextInput::make('anno'),
                ])->columns(4),
            ]);
    }

    public static function table(Table $table): Table {
        return $table
            ->columns([
                TextColumn::make('id'),
                TextColumn::make('cognome')->toggleable(isToggledHiddenByDefault: true)->searchable(),
                TextColumn::make('matr')->toggleable(isToggledHiddenByDefault: true)->searchable(),

                IconColumn::make('ha_diritto')
                        ->default(false)
                        ->boolean(),

                TextColumn::make('motivo')
                        ->wrap(),
                // ->formatStateUsing(fn (string $state) => dddx($state)),

                /*
                GroupColumn::make('diritto')->schema([
                    //TextColumn::make('ha_diritto'),
                    IconColumn::make('ha_diritto')
                        ->default(false)
                        ->boolean(),
                    TextColumn::make('motivo')
                        ->wrap()
                        //->formatStateUsing(fn (string $state) => dddx($state))
                        //->listWithLineBreaks()
                        //->badge()
                        //->separator(','),
                ]),
                */
                GroupColumn::make('lavoratore')->schema([
                    TextColumn::make('matr')->searchable(),
                    TextColumn::make('cognome')->searchable(),
                    TextColumn::make('nome'),
                    TextColumn::make('email'),
                ]),
                GroupColumn::make('criteri')->schema([
                    TextColumn::make('gg'),
                    TextColumn::make('gg_no_asz'),
                    TextColumn::make('gg_asz'),
                    TextColumn::make('gg_cateco_no_posfun_no_asz'),
                ]),
                GroupColumn::make('qua')->schema([
                    TextColumn::make('propro'),
                    TextColumn::make('posfun'),
                    TextColumn::make('categoria_eco'),
                    TextColumn::make('categoria_ecoval'),
                    TextColumn::make('posfunval'),
                    TextColumn::make('posiz'),
                    TextColumn::make('posiz_txt'),
                    TextColumn::make('disci1'),
                    TextColumn::make('disci1_txt'),
                ]),
                GroupColumn::make('rep')->schema([
                    TextColumn::make('stabi'),
                    TextColumn::make('stabi_txt'),
                    TextColumn::make('repar'),
                    TextColumn::make('repar_txt'),
                ]),
                GroupColumn::make('periodo')->schema([
                    TextColumn::make('dal'),
                    TextColumn::make('al'),
                    TextColumn::make('anno'),
                ]),

                /*
                TextColumn::make('esperienza_acquisita'),
                TextColumn::make('risultati_ottenuti'),
                TextColumn::make('arricchimento_professionale'),
                TextColumn::make('impegno'),
                TextColumn::make('qualita_prestazione'),
                TextColumn::make('totale'),
                TextColumn::make('totale_pond'),
                TextColumn::make('ha_diritto'),
                TextColumn::make('motivo'),
                TextColumn::make('rep2kd'),
                TextColumn::make('rep2ka'),
                TextColumn::make('qua2kd'),
                TextColumn::make('qua2ka'),
                TextColumn::make('disci1'),
                TextColumn::make('dal'),
                TextColumn::make('al'),
                TextColumn::make('valutatore_id'),
                TextColumn::make('perf_ind_media'),
                TextColumn::make('punt_progressione'),
                */
                // punteggio progressione da 1 a 4TextColumn::make('punt_progressione_finale'),
                // somma(moltiplicazione dei criteri * peso)TextColumn::make('benificiario_progressione'),
                /*
                TextColumn::make('rep2kd'),
                TextColumn::make('rep2ka'),
                TextColumn::make('propro'),
                TextColumn::make('posfun'),
                TextColumn::make('posiz'),
                TextColumn::make('disci1'),
                TextColumn::make('qua2kd'),
                TextColumn::make('qua2ka'),
                TextColumn::make('dal'),
                TextColumn::make('al'),
                TextColumn::make('excellences_count_last_3_years'),
                */
                // -----------------------------------
                /*
                TextColumn::make('posiz_txt'),
                TextColumn::make('clafun'),
                TextColumn::make('stabi_txt'),
                TextColumn::make('repar_txt'),
                TextColumn::make('stabival'),
                TextColumn::make('reparval'),
                TextColumn::make('indir'),
                TextColumn::make('gg_in_sede'),
                TextColumn::make('n_gg_in_sede'),
                TextColumn::make('gg_fuori_sede'),
                TextColumn::make('n_gg_fuori_sede'),
                TextColumn::make('gg_aspettative_in_sede'),
                TextColumn::make('gg_aspettative_fuori_sede'),
                TextColumn::make('gg_posiz_1_in_sede'),
                TextColumn::make('gg_presenza_anno'),
                TextColumn::make('gg_assenza_anno'),
                TextColumn::make('gg_asz_tip_cod_escluso_subito'),
                TextColumn::make('gg_anno'),
                TextColumn::make('gg_cateco_posfun'),
                TextColumn::make('rep003'),
                TextColumn::make('disci1_txt'),
                TextColumn::make('gg'),
                TextColumn::make('peso_esperienza_acquisita'),
                TextColumn::make('peso_risultati_ottenuti'),
                TextColumn::make('peso_arricchimento_professionale'),
                TextColumn::make('peso_impegno'),
                TextColumn::make('peso_qualita_prestazione'),
                TextColumn::make('gg_aspettative_pond_in_sede'),
                TextColumn::make('gg_aspettative_pond_fuori_sede'),
                TextColumn::make('gg_cateco_in_sede'),
                TextColumn::make('gg_cateco_fuori_sede'),
                TextColumn::make('gg_cateco_posfun_in_sede'),
                TextColumn::make('gg_cateco_posfun_fuori_sede'),
                TextColumn::make('gg_cateco_no_posfun_in_sede'),
                TextColumn::make('gg_cateco_no_posfun_fuori_sede'),
                TextColumn::make('gg_no_cateco_in_sede'),
                TextColumn::make('gg_no_cateco_fuori_sede'),
                TextColumn::make('gg_no_cateco_posfun_in_sede'),
                TextColumn::make('gg_no_cateco_posfun_fuori_sede'),
                TextColumn::make('gg_asz_cateco_posfun_in_sede'),
                TextColumn::make('gg_asz_cateco_posfun_fuori_sede'),
                TextColumn::make('gg_tot_pond'),
                TextColumn::make('asz2ka'),
                TextColumn::make('gg_presenze_in_anno'),
                TextColumn::make('gg_assenze_in_anno'),
                TextColumn::make('ore_assenze_in_anno'),
                TextColumn::make('vincitore'),
                TextColumn::make('perf_ind_2015'),
                TextColumn::make('perf_ind_2016'),
                TextColumn::make('perf_ind_2017'),
                TextColumn::make('perf_ind_2018'),
                TextColumn::make('perf_ind_2014'),
                TextColumn::make('peso_perf_ind_media'),
                TextColumn::make('risultato'),
                TextColumn::make('ptime'),
                TextColumn::make('costo_fascia_up'),
                TextColumn::make('titolo_di_studio'),
                TextColumn::make('gg_cateco_posfun_no_asz'),
                TextColumn::make('perf_ind_2019'),
                TextColumn::make('gg_cateco_posfun_in_sede_no_asz'),
                TextColumn::make('perf_ind_2020'),
                TextColumn::make('gg_cateco_sup_in_sede'),
                TextColumn::make('gg_asz'),
                TextColumn::make('hh_asz'),
                TextColumn::make('eta'),
                TextColumn::make('gg_in_sede_no_asz'),
                TextColumn::make('scheda_type'),
                TextColumn::make('post_type'),
                TextColumn::make('ente'),
                TextColumn::make('matr'),
                TextColumn::make('stabi'),
                TextColumn::make('repar'),
                TextColumn::make('rep2kd'),
                TextColumn::make('rep2ka'),
                TextColumn::make('anno'),
                TextColumn::make('propro'),
                TextColumn::make('posfun'),
                TextColumn::make('posiz'),
                TextColumn::make('disci1'),
                TextColumn::make('qua2kd'),
                TextColumn::make('qua2ka'),
                */
            ])
           ->filters([
               app(\Modules\Xot\Actions\Filament\Filter\GetYearFilter::class)->execute('anno', date('Y') - 3, intval(date('Y'))),
           ], layout: FiltersLayout::AboveContent)
           ->persistFiltersInSession()
            ->actions([
                Tables\Actions\EditAction::make()->label('')->tooltip('Modifica'),
                Tables\Actions\ViewAction::make()->label('')->tooltip('Vedi'),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    /**
     * @return array<RelationManagers>
     */
    public static function getRelations(): array {
        return [
            PtvRelationManagers\Qua00fRelationManager::class,
            PtvRelationManagers\Qua03fRelationManager::class,
            PtvRelationManagers\AszEffRelationManager::class,
        ];
    }

    public static function getPages(): array {
        return [
            'index' => Pages\ListProgressionis::route('/'),
            'create' => Pages\CreateProgressioni::route('/create'),
            'edit' => Pages\EditProgressioni::route('/{record}/edit'),
            'view' => Pages\ViewProgressioni::route('/{record}'),
        ];
    }
}

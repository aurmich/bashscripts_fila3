<?php

declare(strict_types=1);
/*
 * @see https://coderflex.com/blog/create-advanced-filters-with-filament
 */

namespace Modules\Ptv\Filament\Infolists;

use Filament\Infolists\Components;

class Qua03fSection extends Components\Section {
    
    public static function getDefaultName(): ?string {
        return 'qua03f';
    }

    protected function setUp(): void {
        parent::setUp();

        $this->schema([
            Components\RepeatableEntry::make('qua03f')
                ->schema([
                    Components\TextEntry::make('id'),
                    Components\TextEntry::make('matr'),
                    Components\TextEntry::make('q3pro'),
                    Components\TextEntry::make('q3fun'),
                    Components\TextEntry::make('q3tipo'),
                    Components\TextEntry::make('q3desc'),
                    Components\TextEntry::make('q32kd'),
                    Components\TextEntry::make('q32ka'),
                    //Components\TextEntry::make('q3ann'),
                    //Components\TextEntry::make('_gg')
                    //    ->default(fn($record)=>($record->gg([]))),
                    //Components\TextEntry::make('asz_txt')->,
                    //->columnSpan(2),
                     Components\TextEntry::make('_gg')
                        ->default(fn($record)=>$record->gg([
                            'date_max'=>$this->getRecord()->getDateMax(),
                        ])),
                   
                    Components\TextEntry::make('_gg_cateco')
                        ->default(function($record):int{
                            $res=$record->gg(
                                [
                            'date_max'=>$this->getRecord()->getDateMax(),
                            'lista_propro' => $this->getRecord()->lista_propro,
                            'lista_propro_sup' => $this->getRecord()->lista_propro_sup,
                            ]
                            );
                           
                            return $res;
                        }
                    ),

                    Components\TextEntry::make('_gg_cateco_posfun')
                        ->default(function($record):int{
                            $res=$record->gg(
                                [
                            'date_max'=>$this->getRecord()->getDateMax(),
                            'lista_propro' => $this->getRecord()->lista_propro,
                            'lista_propro_sup' => $this->getRecord()->lista_propro_sup,
                            'posfun'    => $this->getRecord()->posfun_val,
                            ]
                            );
                           
                            return $res;
                        }
                    ),
                ])
            ->columns(11),
        ]);
    }
}

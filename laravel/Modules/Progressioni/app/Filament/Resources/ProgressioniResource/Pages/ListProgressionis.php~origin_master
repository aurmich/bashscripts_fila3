<?php

declare(strict_types=1);

namespace Modules\Progressioni\Filament\Resources\ProgressioniResource\Pages;

use Filament\Actions;
use Filament\Resources\Pages\ListRecords;
use Illuminate\Support\Arr;
use Modules\Progressioni\Filament\Actions\Header\RicalcolaAction;
use Modules\Progressioni\Filament\Resources\ProgressioniResource;
use Modules\Progressioni\Models\Progressioni;
use Modules\Ptv\Actions\Filament\Actions\PopulateYearButton;
use Modules\Ptv\Actions\Filament\Actions\TrovaEsclusiButton;
use Modules\Ptv\Actions\PopulateByYearAction;
use Modules\Ptv\Filament\Actions\Header\MergeDoubleRowCatecoYearAction;
use Modules\Xot\Actions\Filament\Actions\CopyFromLastYearButton;
use Modules\Xot\Filament\Actions\Header\ExportXlsAction;

class ListProgressionis extends \Modules\Xot\Filament\Resources\Pages\XotBaseListRecords
{
    protected static string $resource = ProgressioniResource::class;

    protected function getHeaderActions(): array
    {
        // app(PopulateByYearAction::class)->execute(Progressioni::class,'anno','2023');

        $anno = Arr::get($this->tableFilters, 'anno.value');

        return [
            // Actions\CreateAction::make(),
            app(CopyFromLastYearButton::class)
                ->execute(Progressioni::class, 'anno', $anno),
            app(PopulateYearButton::class)
                ->execute(Progressioni::class, 'anno', $anno),
            app(TrovaEsclusiButton::class)
                ->execute(Progressioni::class, 'anno', $anno),
            MergeDoubleRowCatecoYearAction::make(),
            ExportXlsAction::make(),
            RicalcolaAction::make(),
        ];
    }
}
